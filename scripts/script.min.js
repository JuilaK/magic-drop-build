/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/script.js":
/*!*******************************!*\
  !*** ./src/scripts/script.js ***!
  \*******************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  fix100vh();\n  window.addEventListener('resize', function () {\n    fix100vh();\n    setTooltipPosition();\n    toggleTableOverlay();\n    if (filtersContainer && filtersContainer.classList.contains('cases-filters--open-filters')) {\n      filtersContainer.classList.remove('cases-filters--open-filters');\n    }\n  });\n  var header = document.querySelector('.js-header');\n  var headerNav = document.querySelector('.js-header-nav');\n\n  // Open and close menu\n\n  var menuBurgerBtn = document.querySelector('.js-menu-burger-btn');\n  menuBurgerBtn.addEventListener('click', function () {\n    var isHasOpenClass = header.classList.contains('header--menu-open');\n    return isHasOpenClass ? closeMenu() : openMenu();\n  });\n  document.addEventListener('keydown', function (e) {\n    if (e.code === \"Escape\" && header.classList.contains('header--menu-open')) {\n      closeMenu();\n      document.body.style.overflow = '';\n    }\n  });\n  function closeMenu() {\n    header.classList.remove('header--menu-open');\n  }\n  function openMenu() {\n    header.classList.add('header--menu-open');\n    if (document.documentElement.clientWidth < 756) {\n      document.body.style.overflow = 'hidden';\n    }\n  }\n  // End Open and close menu\n\n  // Open and close filters\n\n  var filtersContainer = document.querySelector('.js-cases-filters-container');\n  var filtersBtn = document.querySelector('.js-cases-filters-btn');\n  var filters = document.querySelector('.js-cases-filters');\n  filtersBtn && filtersBtn.addEventListener('click', function () {\n    filtersContainer.classList.toggle('cases-filters--open-filters');\n  });\n\n  // END Open and close filters\n\n  // Open and Close notifications\n  var notifications = document.querySelectorAll('.js-notification');\n  var notificationsBtn = document.querySelector('.js-notifications-btn');\n  notificationsBtn.addEventListener('click', function () {\n    notifications.forEach(function (notification, i) {\n      if (!notification.classList.contains('notification--open')) {\n        setTimeout(function () {\n          return notification.classList.add('notification--open');\n        }, i * 300);\n        setTimeout(function () {\n          return notification.classList.remove('notification--open');\n        }, 3000);\n      }\n    });\n  });\n  // END Open and Close notifications\n\n  // Modal\n  var modalTriggers = document.querySelectorAll('[data-modal-trigger]');\n  var modalCloseBtns = document.querySelectorAll('.js-modal-close');\n  modalTriggers.forEach(function (trigger) {\n    trigger.addEventListener('click', function (e) {\n      return openModal(e);\n    });\n  });\n  modalCloseBtns.forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      closeModal(btn.closest('.js-modal'));\n    });\n  });\n  function openModal(e) {\n    var target = e.currentTarget;\n    var modalTarget = document.querySelector(\"[data-modal-name=\".concat(target.dataset.modalTrigger, \"]\"));\n    modalTarget.classList.add('modal--open');\n    document.body.style.overflow = 'hidden';\n    toggleTableOverlay();\n  }\n  function closeModal(modal) {\n    if (modal.classList.contains('modal--open')) {\n      modal.classList.remove('modal--open');\n      document.body.style.overflow = '';\n    }\n  }\n  // END Modal\n\n  // Select\n  var selectTriggers = document.querySelectorAll('.js-select-btn');\n  var selectOptions = document.querySelectorAll('.js-select li');\n  selectTriggers.forEach(function (trigger) {\n    trigger.addEventListener('click', function () {\n      var select = trigger.closest('.js-select');\n      if (select && !select.classList.contains('select--open')) {\n        openSelectMenu(select);\n      } else if (select && select.classList.contains('select--open')) {\n        closeSelectMenu(select);\n      }\n    });\n  });\n  selectOptions.forEach(function (option) {\n    option.addEventListener('click', function () {\n      var select = option.closest('.js-select');\n      var selectOptionHtml = select.querySelector('.js-selected-value');\n      if (selectOptionHtml) {\n        selectOptionHtml.innerHTML = option.querySelector('label').innerHTML;\n      }\n      select && closeSelectMenu(select);\n    });\n  });\n  function openSelectMenu(select) {\n    select.classList.add('select--open');\n  }\n  function closeSelectMenu(select) {\n    select.classList.remove('select--open');\n  }\n  // END Select\n\n  // Open and close chance table\n  var chanceBtns = document.querySelectorAll('.js-chance-btn');\n  chanceBtns.forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      var skin = btn.closest('.js-skin');\n      skin.querySelector('.js-chance-table').classList.toggle('skin__table--open');\n    });\n  });\n\n  // END Open and close chance table\n\n  // Spin and open/close win block\n  var roulettes = document.querySelectorAll('.js-case-roulette');\n  var winBtn = document.querySelector('.js-win-btn');\n  var winBlock = document.querySelector('.js-win-block');\n  var winSellBtn = document.querySelector('.js-win-sell-btn');\n  winBtn && winBtn.addEventListener('click', function () {\n    roulettes.forEach(function (roulette) {\n      return roulette.classList.add('case-hero__roulette--spin');\n    });\n    setTimeout(function () {\n      roulettes.forEach(function (roulette) {\n        return roulette.classList.remove('case-hero__roulette--spin');\n      });\n      winBlock.classList.add('win--open');\n    }, 2000);\n  });\n  winSellBtn && winSellBtn.addEventListener('click', function () {\n    winBlock.classList.remove('win--open');\n  });\n  // END Spin and open/close win block\n\n  // Mini skin tooltip position\n  setTooltipPosition();\n  // END Mini skin tooltip position\n\n  // Tabs\n  var tabs = document.querySelectorAll('.js-tab');\n  !!tabs && tabs.forEach(function (tab) {\n    if (tab.checked) {\n      var tabContent = document.querySelector(\"[data-tab=\\\"\".concat(tab.id, \"\\\"]\"));\n      tabContent.classList.add('open');\n    }\n  });\n  !!tabs && tabs.forEach(function (tab) {\n    tab.addEventListener('change', function (e) {\n      var currentChoice = e.target.id;\n      var currentChoiceBlock = document.querySelector(\"[data-tab=\\\"\".concat(currentChoice, \"\\\"]\"));\n      if (e.target.checked) {\n        var nameTabs = document.querySelectorAll(\"[name=\\\"\".concat(e.target.name, \"\\\"]\"));\n        nameTabs.forEach(function (tab) {\n          var tabContent = document.querySelector(\"[data-tab=\\\"\".concat(tab.id, \"\\\"]\"));\n          if (tabContent.classList.contains('open')) {\n            tabContent.classList.remove('open');\n          }\n        });\n        currentChoiceBlock.classList.add('open');\n      }\n    });\n  });\n  // END Tabs\n\n  // Upgrade\n  var upgradeBlock = document.querySelector('.js-upgrade');\n  var upgradeBtn = document.querySelector('.js-upgrade-btn');\n  var upgradeBtns = document.querySelector('.js-upgrade-btns');\n  var upgradeFailBtns = document.querySelector('.js-upgrade-fail-btns');\n  var upgradeWin = document.querySelector('.js-upgrade-win');\n  var upgradeFail = document.querySelector('.js-upgrade-fail');\n  var upgradeSellBtn = document.querySelector('.js-upgrade-sell-btn');\n  var upgradeRepeatBtn = document.querySelector('.js-upgrade-repeat-btn');\n  var upgradeCloseBtn = document.querySelector('.js-upgrade-close-btn');\n  upgradeBtn && upgradeBtn.addEventListener('click', function () {\n    upgradeBlock.classList.add('upgrade--win');\n    setTimeout(function () {\n      upgradeBtn.classList.add('upgrade__btn--hide');\n      upgradeBtns.classList.add('upgrade__btns--show');\n      upgradeWin.classList.add('upgrade__win--open');\n    }, 7000);\n  });\n  upgradeSellBtn && upgradeSellBtn.addEventListener('click', function () {\n    if (upgradeBlock.classList.contains('upgrade--win')) {\n      upgradeBlock.classList.remove('upgrade--win');\n    }\n    upgradeBtn.classList.remove('upgrade__btn--hide');\n    upgradeBtns.classList.remove('upgrade__btns--show');\n    upgradeWin.classList.remove('upgrade__win--open');\n  });\n  upgradeRepeatBtn && upgradeRepeatBtn.addEventListener('click', function () {\n    if (upgradeBlock.classList.contains('upgrade--win')) {\n      upgradeBlock.classList.remove('upgrade--win');\n    }\n    if (upgradeBlock.classList.contains('upgrade--fail')) {\n      upgradeBlock.classList.remove('upgrade--fail');\n    }\n    if (upgradeBtn.classList.contains('upgrade__btn--hide')) {\n      upgradeBtn.classList.remove('upgrade__btn--hide');\n      upgradeBtns.classList.remove('upgrade__btns--show');\n    }\n    if (upgradeWin.classList.contains('upgrade__win--open')) {\n      upgradeWin.classList.remove('upgrade__win--open');\n    }\n    void upgradeBlock.offsetWidth;\n    upgradeBlock.classList.add('upgrade--fail');\n    setTimeout(function () {\n      upgradeFail.classList.add('upgrade__fail--open');\n      upgradeBtn.classList.add('upgrade__btn--hide');\n      upgradeFailBtns.classList.add('upgrade__btns--show');\n    }, 9000);\n  });\n  upgradeCloseBtn && upgradeCloseBtn.addEventListener('click', function () {\n    if (upgradeBlock.classList.contains('upgrade--fail')) {\n      upgradeBlock.classList.remove('upgrade--fail');\n    }\n    upgradeBtn.classList.remove('upgrade__btn--hide');\n    upgradeFailBtns.classList.remove('upgrade__btns--show');\n    upgradeFail.classList.remove('upgrade__fail--open');\n  });\n  // END Upgrade\n  var contractBtn = document.querySelector('.js-contract-btn');\n  var contractContainer = document.querySelector('.js-contract-container');\n  contractBtn && contractBtn.addEventListener('click', function () {\n    contractContainer.classList.add('contract__container--create-anim');\n    var contractModal = document.querySelector(\"[data-modal-name='contract-skin']\");\n    setTimeout(function () {\n      contractModal.classList.add('modal--open');\n      document.body.style.overflow = 'hidden';\n    }, 1100);\n    setTimeout(function () {\n      contractContainer.classList.remove('contract__container--create-anim');\n    }, 1200);\n  });\n  // Create a contract\n\n  // END Create a contract\n\n  // Click outside\n  document.addEventListener('mousedown', function (e) {\n    var target = e.target;\n    if (!headerNav.contains(target) && !menuBurgerBtn.contains(target)) {\n      closeMenu();\n    }\n    if (!target.closest('.js-select')) {\n      var selects = document.querySelectorAll('.js-select.select--open');\n      selects && selects.forEach(function (select) {\n        closeSelectMenu(select);\n      });\n    }\n    if (!target.closest('.js-skin') || !target.closest('.js-chance-table') && !target.closest('.js-chance-btn')) {\n      var tables = document.querySelectorAll('.js-chance-table.skin__table--open');\n      tables && tables.forEach(function (table) {\n        table.classList.remove('skin__table--open');\n      });\n    }\n    if (!target.closest('.js-modal-dialog') && target.closest('.js-modal')) {\n      closeModal(target.closest('.js-modal'));\n    }\n    if (filters && !filters.contains(target) && !filtersBtn.contains(target) && filtersContainer.classList.contains('cases-filters--open-filters')) {\n      filtersContainer.classList.remove('cases-filters--open-filters');\n    }\n  });\n  // END Click outside\n\n  // Double range slider\n  var minRangeValueGap = 1;\n  var range = document.querySelector(\".js-range-track\");\n  var minval = document.querySelector(\".js-range-min\");\n  var maxval = document.querySelector(\".js-range-max\");\n  var rangeInput = document.querySelectorAll(\".js-range-slider input\");\n  var minRange, maxRange, minPercentage, maxPercentage;\n  var minRangeFill = function minRangeFill() {\n    range.style.left = rangeInput[0].value / rangeInput[0].max * 100 + \"%\";\n  };\n  var maxRangeFill = function maxRangeFill() {\n    range.style.right = 100 - rangeInput[1].value / rangeInput[1].max * 100 + \"%\";\n  };\n  var MinVlaueBubbleStyle = function MinVlaueBubbleStyle() {\n    minPercentage = minRange / rangeInput[0].max * 100;\n    minval.style.left = \"calc(.3rem + \" + minPercentage + \"%)\";\n    minval.style.transform = \"translate(-50% - \".concat(minPercentage / 2, \"%, -100%)\");\n  };\n  var MaxVlaueBubbleStyle = function MaxVlaueBubbleStyle() {\n    maxPercentage = 100 - maxRange / rangeInput[1].max * 100;\n    maxval.style.right = \"calc(.1rem + \" + maxPercentage + \"%)\";\n    maxval.style.transform = \"translate(50% + \".concat(maxPercentage / 2, \"%, -100%)\");\n  };\n  var setMinValueOutput = function setMinValueOutput() {\n    minRange = parseInt(rangeInput[0].value);\n    minval.innerHTML = rangeInput[0].value;\n  };\n  var setMaxValueOutput = function setMaxValueOutput() {\n    maxRange = parseInt(rangeInput[1].value);\n    maxval.innerHTML = rangeInput[1].value;\n  };\n  if (rangeInput.length) {\n    setMinValueOutput();\n    setMaxValueOutput();\n    minRangeFill();\n    maxRangeFill();\n    MinVlaueBubbleStyle();\n    MaxVlaueBubbleStyle();\n  }\n  rangeInput && rangeInput.forEach(function (input) {\n    input.addEventListener(\"input\", function (e) {\n      setMinValueOutput();\n      setMaxValueOutput();\n      minRangeFill();\n      maxRangeFill();\n      MinVlaueBubbleStyle();\n      MaxVlaueBubbleStyle();\n      if (maxRange - minRange < minRangeValueGap) {\n        if (e.target.className === \"min\") {\n          rangeInput[0].value = maxRange - minRangeValueGap;\n          setMinValueOutput();\n          minRangeFill();\n          MinVlaueBubbleStyle();\n          e.target.style.zIndex = \"2\";\n        } else {\n          rangeInput[1].value = minRange + minRangeValueGap;\n          e.target.style.zIndex = \"2\";\n          setMaxValueOutput();\n          maxRangeFill();\n          MaxVlaueBubbleStyle();\n        }\n      }\n    });\n  });\n  // END Double range slider\n});\nfunction fix100vh() {\n  var vh = document.documentElement.clientHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', \"\".concat(vh, \"px\"));\n}\nfunction setTooltipPosition() {\n  var miniSkinTooltip = document.querySelectorAll('.js-mini-skin-tooltip');\n  miniSkinTooltip.forEach(function (tooltip) {\n    var tooltipRight = tooltip.getBoundingClientRect().right;\n    var tooltipLeft = tooltip.getBoundingClientRect().left;\n    var windowWidth = document.documentElement.clientWidth;\n    if (windowWidth - tooltipRight < 100 && !tooltip.classList.contains('tooltip--right')) {\n      tooltip.classList.remove('tooltip--center', 'tooltip--left');\n      tooltip.classList.add('tooltip--right');\n      return;\n    }\n    if (tooltipLeft < 100 && !tooltip.classList.contains('tooltip--left')) {\n      tooltip.classList.remove('tooltip--center', 'tooltip--right');\n      tooltip.classList.add('tooltip--left');\n      return;\n    }\n    if (windowWidth - tooltipRight >= 100 && tooltipLeft >= 100 && !tooltip.classList.contains('tooltip--center')) {\n      tooltip.classList.remove('tooltip--left', 'tooltip--right');\n      tooltip.classList.add('tooltip--center');\n    }\n  });\n}\nfunction toggleTableOverlay() {\n  var skinTable = document.querySelector('.js-skin-table');\n  var skinTableWrap = document.querySelector('.js-skin-table-wrap');\n  if (!!skinTableWrap && skinTableWrap.scrollHeight > skinTable.clientHeight && !skinTable.classList.contains('skin-table--overlay')) {\n    skinTable.classList.add('skin-table--overlay');\n  } else if (!!skinTableWrap && skinTableWrap.scrollHeight <= skinTable.clientHeight && skinTable.classList.contains('skin-table--overlay')) {\n    skinTable.classList.remove('skin-table--overlay');\n  }\n}\n\n//# sourceURL=webpack://magic-drop/./src/scripts/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;